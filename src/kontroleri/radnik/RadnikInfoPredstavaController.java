package kontroleri.radnik;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;

import javafx.scene.input.MouseEvent;
import kontroleri.PomocniKontroler;
import modeli.IzvodjenjePredstave;
import modeli.OsobljePredstave;
import modeli.RadnikPozorista;
import modeli.Zanr;

public class RadnikInfoPredstavaController implements Initializable{
	@FXML
	private Label lblDatum;
	@FXML
	private Label lblVrijeme;
	@FXML
	private Label lblCijena;
	@FXML
	private Label lblCijena1;
	@FXML
	private Label lblZanr;
	@FXML
	private Label lblAutor;
	@FXML
	private Label lblReziser;
	@FXML
	private Button btnPredstavaNazad;
	@FXML
	private ListView<String> lvGlumci;
	@FXML
	private Button btnPredstave;
	@FXML
	private Button btnIzvodjenja;
	@FXML
	private Button btnOsoblje;
	@FXML
	private Button btnIzloguj;
	@FXML
	private Label nazivPozorista;
	@FXML
	private Button btnRezervacije;
	@FXML
	private Button btnKreiraj;
	@FXML
	private Button btnOmeni;
	private IzvodjenjePredstave ip;
	
	// Event Listener on Button[#btnOmeni].onAction
		@FXML
		public void oMeni(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.oMeniScena(event);
		}
		// Event Listener on Button[#btnKreiraj].onAction
		@FXML
		public void KreirajScena(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.kreirajScena(event);
		}
		// Event Listener on Button[#btnOsoblje].onAction
		@FXML
		public void osobljeScena(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.prebaciOsoblje(event);
		}
		// Event Listener on Button[#btnRezervacije].onAction
		@FXML
		public void rezervacijeScena(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.rezervacijaScena(event);
		}
		// Event Listener on Button[#btnPredstave].onAction
		@FXML
		public void predstaveScena(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.predstaveScena(event);
		}
		// Event Listener on Button[#btnIzvodjenja].onAction
		@FXML
		public void izvodjenjaScena(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.izvodjenjaScena(event);
		}
		@FXML
		public void izloguj(ActionEvent event) throws IOException {
			PomocniKontroler help = new PomocniKontroler();
			help.izlogujScena(event);
		}
		

	// Event Listener on Label[#lblAutor].onMouseClicked
	@FXML
	public void oOsoblju(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnPredstavaNazad].onAction
	@FXML
	public void nazadPredstave(ActionEvent event) throws IOException {
		PomocniKontroler help = new PomocniKontroler();
		help.izvodjenjaScena(event);
	}
	
	
	public void ucitaj() {
			
			lblDatum.setText(ip.getDatum().toString());
			lblVrijeme.setText(ip.getVrijeme().toString());
			
			lblCijena.setText(Double.toString(ip.getCijena()));
			
			lblZanr.setText(Zanr.getString(ip.getPredstava().getZanr().getBroj()));
			
			//System.out.println(ip.getPredstava().getId() + "--id predstave");
			
			lblAutor.setText(OsobljePredstave.vratiAutora(ip.getPredstava().getId()));
			lblReziser.setText(OsobljePredstave.vratiRezisera(ip.getPredstava().getId()));
			
			lvGlumci.getItems().addAll(OsobljePredstave.vratiGlumce(ip.getPredstava().getId()));
			
			nazivPozorista.setText(RadnikPozorista.trenutni.getPozoristeID().getNaziv());
		}
		
		public void initData(IzvodjenjePredstave ip) {
			this.ip = ip;
			
			System.out.println(ip.toRepertoarString() + "ip iz info ucitaj");
			
			ucitaj();
				
		}
		
		@Override
		public void initialize(URL arg0, ResourceBundle arg1) {
		}
}
